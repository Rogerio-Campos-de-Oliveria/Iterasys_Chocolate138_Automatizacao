Teste de Unidade

Criar scripts que testem métods e funções
"Código que testa código"

Muitas pessoas sabem apenas fazer testes individuais


Existe uma forma melhor de executra multiplos testes variando seus valores
É chamado de DDT - Data Driven Testing = Test Direcionado por Dados


Normalmente, os teste de unidade são Criados após a programação

Existe uma forma de organização do tranbalho que inverte isso. Primeiro se
completam os testes e depois a programação

Em um Sprint, na manhã da 1° segunda-feira, nós conversamos sobre o que será construído.
Da tarde, o PO e o QA se reunem para definir os critérios de aceite (Dado-Quando-Então)
Enquanto isso, os devs montam o esqueleto do código, voltando um resultado fixo

Exemplo:
Na reunião, ficou definido que nesta sprint nos construiriamos 4 funções de cálculo de áreas:
public double calcularQuadrado(double lado){return 0; }
public double calcularRetanguo(double largura, double comprimento){return 0; }
public double calcularTriangulo(double largura, double comprimento){return 0; }
public double calcularcirculo(double raio){return 0; }


Teste funcionando é uma medida do progresso do software

No TDD, quando executamos a bateria de testes?
-R: Uma vez por dia ou quando há um novo build

Esse processo pode evoluir para um processo de Integração Continua (CI)

Devs                                          Passou                    Passou
 Ambiente Desenvolvimento  -------> Release --------> Ambiente de Teste ------> Ambiente de Produção
                         Integração Continua
                               Entrega Continua(CD) -----> Esteira / Pipeline